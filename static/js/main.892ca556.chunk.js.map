{"version":3,"sources":["serviceWorker.js","js/pages/Home.js","js/elements/button.js","js/elements/input.js","js/helpers/Authentication.js","js/elements/message.js","js/pages/Login.js","js/pages/Register.js","js/routes.js","js/App.js","index.js"],"names":["Boolean","window","location","hostname","match","Home","props","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","react_default","a","createElement","token","Component","MyButton","className","onClick","text","Input","response","label","labelClass","push","input","key","uniqueKey","type","name","id","placeholder","Authentication","url","process","clientId","clientSecret","state","email","password","data","grant_type","client_id","client_secret","username","axios","post","then","res","catch","error","status","Message","$","animate","opacity","concat","message","require","config","Login","_this","errorLogin","errorMessage","bind","assertThisInitialized","signIn","setState","history","replace","_this2","auth","val","requestToken","value","undefined","access_token","refreshToken","refresh_token","inputEmail","elements_input","inputPassword","buttons","elements_button","react_router_dom","to","Register","passwordConfirm","birth","Date","errorRegister","getData","register","changeBirth","confirmPassword","date","_this3","date_of_birth","moment","format","title","inputName","inputPasswordConfirm","inputBirth","react_datepicker_min_default","onChange","selected","dateFormat","buttonRegister","buttonBack","PrivateRoutes","_ref","component","rest","objectWithoutProperties","isAuthenticated","react_router","pathname","Routes","path","exact","App","routes","ReactDOM","render","js_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.892ca556.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, { Component } from 'react';\n\nclass Home extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        return <h1>{this.props.token}</h1>;\n    }\n}\n\nexport default Home;","import React, {Component} from 'react';\n\nclass MyButton extends Component {\n  render() {\n    return <button className={this.props.className} onClick={this.props.onClick}>{this.props.text}</button>;\n  }\n}\n\nexport default MyButton;","import React, {Component} from 'react';\n\nclass Input extends Component {\n  render() {\n  \tconst response = [];\n\n\tif (this.props.label) {\n\t\tconst label = <labe className={this.props.labelClass}>{this.props.label}</labe>\n\t\tresponse.push(label);\n\t}\n\tconst input =  <input \n\t\tkey={this.props.uniqueKey}\n    \ttype={this.props.type} \n    \tname={this.props.name} \n    \tid={this.props.id} \n    \tclassName={this.props.className} \n\t\tplaceholder={this.props.placeholder}\n    />; \n\tresponse.push(input);\n\n    return response;\n  }\n}\n\nexport default Input;","import axios from 'axios';\n\n\nclass Authentication {\n    constructor() {\n        this.url = process.env.REACT_APP_API_URL;\n        this.clientId = process.env.REACT_APP_CLIENT_ID;\n        this.clientSecret = process.env.REACT_APP_CLIENT_SECRET;  \n    }\n    \n    /** Verifica se o usuario está autenticado */\n    isAuthenticated (props) {\n        if (!props.location.state.token) { \n            return false;\n        }\n        return true;\n    }\n\n    /** Faz a requisição to token de acesso do usuário */\n    async requestToken(email, password) {\n        const data = {\n            grant_type: 'password',\n            client_id: this.clientId,\n            client_secret: this.clientSecret,\n            username: email,\n            password: password\n        }  \n        return await axios.post(this.url + 'o/token/', data)\n            .then(res => {\n                return res;\n            }).catch(error => {\n                return {\n                    status: error.response.status,\n                    data: error.response.data\n                }\n            });\n    }\n}\n    \nexport default Authentication; ","import React, {Component} from 'react';\nimport $ from 'jquery'; \n\nclass Message extends Component {\n\n    componentDidMount() {\n        $('#message').animate({opacity: 0}, 2500);\n    }\n\n    render() {\n        return <div \n            id='message' \n            className={\n                `message message--${this.props.type}`}\n            >\n            <strong>{this.props.message}</strong>\n            </div>\n    }\n}\n\nexport default Message;","import React, {Component} from 'react';\nimport Button from '../elements/button.js';\nimport Input from '../elements/input.js';\nimport $ from 'jquery'; \nimport { Link } from 'react-router-dom';\nimport Authentication from '../helpers/Authentication';\nimport Message from '../elements/message.js';\nrequire('dotenv').config()\n\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: '',\n      password: '',\n      errorLogin: false\n    };\n    this.errorMessage = this.errorMessage.bind(this);\n    this.signIn = this.signIn.bind(this);\n  }\n\n  componentDidMount() {\n    if (this.props.location.state) {\n      this.setState({\n        email: this.props.location.state.email,\n        password: this.props.location.state.password,\n        errorLogin: this.props.location.state.errorLogin\n      });\n    }\n    const { history } = this.props;\n    //use the state via location.state\n    //and replace the state via\n    history.replace()\n  }\n\n  /**\n   *  efetua o login\n   */\n  signIn() {\n    const auth = new Authentication();\n    const email = $('#email').val();\n    const password = $('#password').val();\n\n    const response = auth.requestToken(email, password);\n    response.then(value => {\n      let errorLogin = false;\n      if (value.data.error !== undefined) {\n        errorLogin = true; \n      }\n\n      this.props.history.replace(\n        '/home',\n        {\n          email: this.state.email,\n          password: this.state.password,\n          token: value.data.access_token,\n          refreshToken: value.data.refresh_token,\n          errorLogin: errorLogin \n        }\n      );\n    });\n  }\n\n  errorMessage() {\n    return <Message \n      message='Email ou senha incorretos, tente novamente'\n      type='error' \n    />\n  }\n\n  render() {\n    let inputClass = 'input'; \n    let errorMessage;\n    if (this.state.errorLogin) {\n      errorMessage = this.errorMessage();\n    }\n    let label = <h2 className='title'>Login</h2>\n  \tlet inputEmail = <div className=\"item\"><Input uniqueKey='email' type='text' name='email' id='email' className={inputClass} placeholder='Email...' /></div>;\n    let inputPassword = <div className=\"item\" ><Input uniqueKey='password' type='password' name='password' id='password' className={inputClass} placeholder='Senha...'/></div>;\n  \tlet buttons = <div className=\"item subgrid\">\n      <Button className='subgrid--item btn btn--success' text='Entrar' onClick={this.signIn}/>\n      <Link className='subgrid--item btn btn--primary' to=\"/register\">Cadastrar</Link>\n    </div>\n\n    return (\n      <div className='login-container-grid'>\n        {errorMessage}\n        <div className='panel grid-container'>\n          {label}\n          {inputEmail}\n          {inputPassword}\n          {buttons}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Login;\n","import React, {Component} from 'react';\nimport Input from '../elements/input.js';\nimport Button from '../elements/button.js';\nimport $ from 'jquery';\nimport { Link } from 'react-router-dom'\nimport Message from '../elements/message.js';\nimport axios from 'axios'\nimport Authentication from '../helpers/Authentication';\nimport DatePicker from 'react-datepicker';\nimport moment from 'moment';\nimport 'react-datepicker/dist/react-datepicker.css';\nrequire('dotenv').config()\n\nclass Register extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tname: '',\n\t\t\tpassword: '',\n\t\t\tpasswordConfirm: '',\n\t\t\temail: '',\n\t\t\tbirth: new Date(),\n\t\t\terrorMessage: '',\n\t\t\terrorRegister: '',\n\t        url: process.env.REACT_APP_API_URL\n\t\t}\n\t\tthis.getData = this.getData.bind(this);\n\t\tthis.register = this.register.bind(this);\n\t\tthis.errorMessage = this.errorMessage.bind(this); \n\t\tthis.changeBirth = this.changeBirth.bind(this);\n\t}\n\t\n\tcomponentDidMount() {\n\t\tif (this.props.location.state) {\n\t\t\tthis.setState({\n\t\t\t\temail: this.props.location.state.email,\n\t\t\t\tname: this.props.location.state.name,\n\t\t\t\tpassword: this.props.location.state.password,\n\t\t\t\tconfirmPassword: this.props.location.state.confirmPassword,\n\t\t\t\tbirth: this.props.location.state.props,\n\t\t\t\terrorMessage: this.props.location.state.errorMessage,\n\t\t\t\terrorRegister: false\n\t\t\t});\n\t\t}\n\t\tconst { history } = this.props;\n\t\t//use the state via location.state\n\t\t//and replace the state via\n\t\thistory.replace()\n\t}\n\n\tchangeBirth(date) {\n\t\tthis.setState({\n\t\t\tbirth: date\n\t\t})\n\t}\n\n\tgetData() {\n\t\tthis.setState({\n\t\t\tname: $('#name').val(),\n\t\t\tpassword: $('#password').val(),\n\t\t\tconfirmPassword: $('#passwordConfirm').val(),\n\t\t\temail: $('#email').val(),\n\t\t\t// birth: this.state.birt\n\t\t\terrorMessage: '',\n\t\t\terrorRegister: false,\n\t\t}, () => this.register())\n\t}\n\n\tregister() {\n\t\tif (this.state.password !== this.state.confirmPassword) {\n\t\t\tthis.setState({\n\t\t\t\terrorRegister: true,\n\t\t\t\terrorMessage: 'As senhas precisam ser iguais'\t\t\t\n\t\t\t});\n\t\t\treturn;\n\t\t}\n\n\t\tconst data = {\n\t\t\tname: this.state.name,\n\t\t\tdate_of_birth: moment(this.state.birth).format('YYYY-MM-DD'),\n\t\t\temail: this.state.email,\n\t\t\tpassword: this.state.password\n\t\t}  \n\t\t\n\t\taxios.post(this.state.url + '/user/create', data)\n\t\t\t.then(res => {\n\t\t\t\tconst auth = new Authentication();\n\t\t\t\tconst response = auth.requestToken(\n\t\t\t\t\tres.data.email, \n\t\t\t\t\tthis.state.password\n\t\t\t\t);\n\n\t\t\t\tresponse.then(value => {\n\t\t\t\t\tthis.props.history.replace(\n\t\t\t\t\t\t'/home',\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\temail: this.state.email,\n\t\t\t\t\t\t\tpassword: this.state.password,\n\t\t\t\t\t\t\ttoken: value.data.access_token,\n\t\t\t\t\t\t\trefreshToken: value.data.refresh_token,\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\t\t\t\t})\n\t\t\t\t\n\t\t\t}).catch(error => {\n\t\t\t\tthis.setState({\n\t\t\t\t\terrorRegister: true,\n\t\t\t\t\terrorMessage:error.response.data['email'][0]\n\t\t\t\t});\n\t\t\t})\n\t}\n\n\terrorMessage() {\n\t\treturn <Message\n\t\t\tmessage={this.state.errorMessage}\n\t\t\ttype='error'\n\t\t/>\n\t}\n\n\trender() {\n\t\tlet errorMessage;\n\t\tif (this.state.errorRegister) {\n\t\t\terrorMessage = this.errorMessage();\n\t\t}\n\t\tconst title = <div className=\"item\"><h2 className='title'>Cadastre-se</h2></div>\n\t\tconst inputName = <div className=\"item\"><Input uniqueKey='name' type='text' name='name' id='name' className='input' placeholder='Informe seu nome...'/></div>;\n\t\tconst inputPassword = <div className=\"item\"><Input uniqueKey='password' type='password' name='password' id='password' className='input' placeholder='Informe sua senha...'/></div>;\n\t\tconst inputPasswordConfirm = <div className=\"item\"><Input uniqueKey='passwordConfirm' type='password' name='passwordConfirm' id='passwordConfirm' className='input' placeholder='Confirme sua senha...'/></div>;\n\t\tconst inputEmail = <div className=\"item\"><Input uniqueKey='email' type='text' name='email' id='email' className='input' placeholder='Informe seu email...'/></div>;\n\t\tconst inputBirth = <div className=\"item\"><DatePicker onChange={this.changeBirth} selected={this.state.birth} dateFormat=\"dd/MM/yyyy\" name='birth' id='birth' className='input' placeholder='Informe sua data de nascimento...'/></div>;\n\t\tconst buttonRegister= <Button className='item btn btn--success' text='Cadastrar' onClick={this.getData}/>\n\t\tconst buttonBack= <Link className='item btn btn--primary' to=\"/login\">Voltar</Link>\n\n\t\treturn (\n\t\t\t<div className=\"register-container-grid\">\n\t\t\t\t{errorMessage}\n\t\t\t\t<div className='panel grid-container'>\n\t\t\t\t\t{title}\n\t\t\t\t\t{inputName}\n\t\t\t\t\t{inputPassword}\n\t\t\t\t\t{inputPasswordConfirm}\n\t\t\t\t\t{inputEmail}\n\t\t\t\t\t{inputBirth}\n\t\t\t\t\t{buttonRegister}\n\t\t\t\t\t{buttonBack}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default Register;","import React from 'react';\nimport { BrowserRouter, Switch, Route, Redirect } from 'react-router-dom';\nimport Home from './pages/Home';\nimport Login from './pages/Login';\nimport Register from './pages/Register';\nimport Authentication from './helpers/Authentication';\n\n/** Função para validar se o usuario tem acesso a rotas privadas  */\nfunction PrivateRoutes ({ component: Component, ...rest }) {\n    const authentication = new Authentication();\n    if (!authentication.isAuthenticated(rest)) {\n        return <Redirect \n            to={{\n                pathname:'/login',\n                state: rest.location.state\n            }}\n        />\n    }\n\n    return <Component {...rest} />\n}\n\nfunction Routes () {\n    return <BrowserRouter>\n        <Switch>\n            <Route path=\"/\" exact={true}>\n                <Redirect to='/login'/>\n            </Route>\n            <Route path=\"/login\" exact={true} component={Login} />\n            <Route path=\"/register\" exact={true} component={Register} />\n            <PrivateRoutes path=\"/home\" exact={true} component={Home} />\n        </Switch>\n    </BrowserRouter>\n}\n\nexport default Routes;","import React, {Component} from 'react';\nimport Routes from './routes';\nimport '../styles/css/app.css';\n\nclass App extends Component {\n\n  render() {\n    return (\n      <div className='container'>\n        <div className='box'>\n        </div>\n         <Routes />\n      </div>\n    );\n  }\n}\n\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as serviceWorker from './serviceWorker';\nimport App from './js/App';\n\nReactDOM.render(\n\t<App/>, document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}